package com.example.accessingdatamysql.controllers;

import org.springframework.web.bind.annotation.*;

import com.example.accessingdatamysql.models.User;
import com.example.accessingdatamysql.repositories.UserRepository;

import org.springframework.beans.factory.annotation.Autowired;
import java.util.List;
import java.util.ArrayList;

@RestController// This means that this class is a Controller
// This means URL's start with /demo (after Application path)
public class UserController {
  @Autowired // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @RequestMapping(value="/addAdmin", method=RequestMethod.POST)
  public boolean addAdmin(@RequestBody User user)
    {
	  user.setType("admin");
      if(userRepository.save(user) != null)
          return true;
      return false;
    }
  @RequestMapping(value="/addBuyer", method=RequestMethod.POST)
  public boolean addNormal(@RequestBody User user)
    {
	  user.setType("buyer");
      if(userRepository.save(user) != null)
          return true;
      return false;
    }
  @RequestMapping(value="/addOwner", method=RequestMethod.POST)
  public boolean addOwner(@RequestBody User user)
    {
	  user.setType("Owner");
      if(userRepository.save(user) != null)
          return true;
      return false;
    }

  @RequestMapping(value="/getAll")
   public List<User> getAllUsers() {
      // TODO Auto-generated method stub
      Iterable<User> usersIter= userRepository.findAll();
      List<User> all= new ArrayList<User>();
      for(User user: usersIter)
        all.add(user);

      return all;
   }
}
